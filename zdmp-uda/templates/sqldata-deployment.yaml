# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   annotations:
#     kompose.cmd: kompose convert -f docker-compose.yml -c --replicas=1
#     kompose.version: 1.26.0 (40646f47)
#   creationTimestamp: null
#   labels:
#     io.kompose.service: sqldata
#   name: sqldata
#   namespace: {{ .Release.Namespace }} 
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       io.kompose.service: sqldata
#   strategy:
#     type: Recreate
#   template:
#     metadata:
#       annotations:
#         kompose.cmd: kompose convert -f docker-compose.yml -c --replicas=1
#         kompose.version: 1.26.0 (40646f47)
#       creationTimestamp: null
#       labels:
#         io.kompose.network/zdmpuda: "true"
#         io.kompose.service: sqldata
#     spec:
#       containers:
#         - env:
#             - name: ACCEPT_EULA
#               value: "Y"
#             - name: MSSQL_PID
#               value: Express
#             - name: SA_PASSWORD
#               value: Pass@word
#           image: mcr.microsoft.com/mssql/server:2017-latest
#           name: sqldata
#           ports:
#             - containerPort: 1433
#           resources: {}
#           volumeMounts:
#             - mountPath: /var/opt/mssql/data
#               name: mssql-data
#             - mountPath: /var/opt/mssql/log
#               name: mssql-log
#             - mountPath: /var/opt/mssql/secrets
#               name: mssql-secrets
#       hostname: sqldata
#       restartPolicy: Always
#       volumes:
#         - name: mssql-data
#           persistentVolumeClaim:
#             claimName: mssql-data
#         - name: mssql-log
#           persistentVolumeClaim:
#             claimName: mssql-log
#         - name: mssql-secrets
#           persistentVolumeClaim:
#             claimName: mssql-secrets
# status: {}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.udaPortal.service.name }}-deployment
  namespace: {{ .Release.Namespace }} 
  # annotations:
  #   kompose.cmd: kompose convert -f docker-compose.yml -c --replicas=1
  #   kompose.version: 1.26.0 (40646f47)
  # creationTimestamp: null
  labels:
    # io.kompose.service: sqldata
    app: {{ .Values.global.name }}
    version: {{ .Values.global.appVersion }}
    name: {{ .Values.udaPortal.service.name }}-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      # io.kompose.service: sqldata
      app: {{ .Values.global.name }}
      version: {{ .Values.global.appVersion }}
      name: {{ .Values.udaPortal.service.name }}-deployment
  strategy:
    type: Recreate
  template:
    metadata:
      # annotations:
      #   kompose.cmd: kompose convert -f docker-compose.yml -c --replicas=1
      #   kompose.version: 1.26.0 (40646f47)
      # creationTimestamp: null
      labels:
        io.kompose.network/zdmpuda: "true"
        # io.kompose.service: sqldata
        app: {{ .Values.global.name }}
        version: {{ .Values.global.appVersion }}
        name: {{ .Values.udaPortal.service.name }}-deployment
    spec:
      hostname: sqldata
      containers:
        - env:
            - name: ACCEPT_EULA
              value: "Y"
            - name: MSSQL_PID
              value: Express
            - name: SA_PASSWORD
              value: Pass@word
          # name: sqldata
          name: {{ .Values.udaPortal.service.name }}-container
          image: mcr.microsoft.com/mssql/server:2017-latest
          imagePullPolicy: {{ .Values.udaPortal.image.imagePullPolicy }}
          ports:
            - containerPort: 1433
          resources: {}
          volumeMounts:
            - mountPath: /var/opt/mssql/data
              name: mssql-data
            - mountPath: /var/opt/mssql/log
              name: mssql-log
            - mountPath: /var/opt/mssql/secrets
              name: mssql-secrets
      restartPolicy: Always
      volumes:
        - name: mssql-data
          persistentVolumeClaim:
            claimName: mssql-data
        - name: mssql-log
          persistentVolumeClaim:
            claimName: mssql-log
        - name: mssql-secrets
          persistentVolumeClaim:
            claimName: mssql-secrets
status: {}
