version: '3.0'

services:
  mongodb_container:
    image: mongo:5.0
    container_name: mongodb
    hostname: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - "zdmpuda"
      
  mongo-express:
    image: mongo-express
    container_name: mongodbexpress
    hostname: mongodbexpress
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
      ME_CONFIG_MONGODB_URL: mongodb://root:rootpassword@mongodb:27017/
    networks:
      - "zdmpuda"
      
  xafserver:
    image: swmscon.azurecr.io/zdmpudacomponentblazorserver:latest
    container_name: xafserver
    hostname: xafserver
    restart: always
    ports:
      - 4000:80
    # https://www.portainer.io/blog/using-env-files-in-stacks-with-portainer 
    env_file:
      - .env
    # environment:
#       SQL_PROVIDER: MSSqlServer
#       SQL_SERVER: sqldata
#       SQL_USER: sa
#       SQL_PASSWORD: Pass@word
#       SQL_CATALOG: ${DATABASE_NAME}
# #       SQL_CATALOG: zdmpUDAdemonstration
#       MONGO_CONNECTION: mongodb://root:rootpassword@65.108.81.72:27017/?authSource=admin
#       MONGO_DATABASE: ${DATABASE_NAME}
    networks:
      - "zdmpuda"
      
  zdmpudabackend:
    image: swmscon.azurecr.io/zdmpudabackend:latest
    container_name: zdmpudabackend
    hostname: zdmpudabackend
    restart: always
    ports:
      - 5000:80
    networks:
      - "zdmpuda"
      
  zdmpudacomponentbackendwebapi:
    image: swmscon.azurecr.io/zdmpudacomponentbackendwebapi:latest
    container_name: zdmpudacomponentbackendwebapi
    hostname: zdmpudacomponentbackendwebapi
    restart: always
    ports:
      - 6000:80
    # https://www.portainer.io/blog/using-env-files-in-stacks-with-portainer 
    env_file:
      - .env
#     environment:
#       SQL_PROVIDER: MSSqlServer
#       SQL_SERVER: sqldata
#       SQL_USER: sa
#       SQL_PASSWORD: Pass@word
#       SQL_CATALOG: ${DATABASE_NAME}
# #       SQL_CATALOG: zdmpUDAdemonstration
#       MONGO_CONNECTION: mongodb://root:rootpassword@65.108.81.72:27017/?authSource=admin
#       MONGO_DATABASE: ${DATABASE_NAME}
# #       MONGO_DATABASE: default

    networks:
      - "zdmpuda"
      
  sqldata:
    container_name: sqldata
    hostname: sqldata
    restart: always
    image: mcr.microsoft.com/mssql/server:2017-latest
    volumes:
      - mssql_data:/var/opt/mssql/data
      - mssql_log:/var/opt/mssql/log
      - mssql_secrets:/var/opt/mssql/secrets
    environment:
      - MSSQL_PID=Express
      - SA_PASSWORD=Pass@word
      - ACCEPT_EULA=Y
    ports:
      - "1433:1433"
    networks:
      - "zdmpuda"


    # portal DB
    portaldb:
        container_name: portaldb
        image: gitlabregistry-zdmp.platform.zdmp.eu/enterprise-tier/t6.4-portal/db:1.2.8
        volumes:
            - portal:/data/db
        ports:
            - 27017:27017

  # postgres BD for keycloak data
  postgres:
      container_name: keycloak-db
      image: gitlabregistry-zdmp.platform.zdmp.eu/enterprise-tier/t5.2-secure-authentication-and-authorization:auth-db-M30
      #build: ../subsystems/auth-db
      volumes:
          - postgres_data:/var/lib/postgresql/data
      environment:
          POSTGRES_DB: keycloak
          POSTGRES_USER: keycloak
          POSTGRES_PASSWORD: password
      ports:
          - 5001:5432

  # Identity and Access Management Service
  keycloak:
      container_name: keycloak-api
      #build: ../subsystems/auth
      image: gitlabregistry-zdmp.platform.zdmp.eu/enterprise-tier/t5.2-secure-authentication-and-authorization:auth-M30.1
      #volumes:
      #  - "../subsystems/auth/themes/custom:/opt/jboss/keycloak/themes/"
      command:
          [
              '-b',
              '0.0.0.0',
              '-Dkeycloak.profile.feature.upload_scripts=enabled',
          ]
      environment:
          DB_VENDOR: POSTGRES
          DB_ADDR: postgres
          DB_DATABASE: keycloak
          DB_USER: keycloak
          DB_SCHEMA: public
          DB_PASSWORD: password
          KEYCLOAK_USER: admin
          KEYCLOAK_PASSWORD: Pa55w0rd
          KEYCLOAK_LOGLEVEL: INFO
          ROOT_LOGLEVEL: INFO
          PROXY_ADDRESS_FORWARDING: 'true'
          KEYCLOAK_WELCOME_THEME: ikerlan-red
          KEYCLOAK_LOGIN_THEME: ikerlan-red
          #Supported log levels are ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE and WARN

          #Keycloak image can collect some statistics for various subsystem which will then be available in the management console and the /metrics endpoint.
          #you should see the metrics values changing on the /metrics endpoint for the management endpoint.
          #KEYCLOAK_STATISTICS: all
          # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
          #JDBC_PARAMS: "ssl=true"
      ports:
          - 8080:8080
          - 9990:9990
          - 8443:8443
          #  - 443:443

      depends_on:
          - postgres

  auth-api:
      container_name: auth-api
      image: gitlabregistry-zdmp.platform.zdmp.eu/enterprise-tier/t5.2-secure-authentication-and-authorization:auth-api-M30.1
      environment:
          KEYCLOAK_AUTH-SERVER-URL: http://keycloak:8080/auth
          KEYCLOAK_CREDENTIALS_SECRET: 1ae9446b-548a-47c0-adb1-e2af4a49c923
          ADMIN-CLI: admin-cli
          LOGIN_CLI-USERNAME: zdmp-auth-api
          LOGIN_CLI-PASSWORD: _Ax_TH20
          KEYCLOAK_PRINCIPAL-ATTRIBUTE: preferred_username
      ports:
          - 5000:5000
      depends_on:
          - keycloak


  # Portal NodeJS API
  portal-api:
      container_name: portal-api
      image: gitlabregistry-zdmp.platform.zdmp.eu/enterprise-tier/t6.4-portal/api:1.2.14
      environment:
          AUTH_TOKEN_API: http://keycloak:8080/auth
          AUTH_API: http://auth-api:5000
          AUTH_API_CLIENT_ID: admin-cli
          AUTH_API_USER: zdmp-portal
          AUTH_API_PASSWORD: zdmp-portal-2020
          DATABASE: portaldb
          FRONTEND: http://localhost:4200
      ports:
          - 5100:5100
      depends_on:
          - auth-api

  # Portal Angular Frontend
  portal-frontend:
      container_name: portal-ui
      image: gitlabregistry-zdmp.platform.zdmp.eu/enterprise-tier/t6.4-portal/front:1.2.30
      environment:
          API_ENDPOINT: http://localhost:5100
      ports:
          - 4200:80
      depends_on:
          - portal-api


volumes:
  mongodb_data_container:
  mssql_data:
  mssql_log:
  mssql_secrets:
  portal:
  postgres_data:
      driver: local
  
networks:
  zdmpuda:
    external: true
